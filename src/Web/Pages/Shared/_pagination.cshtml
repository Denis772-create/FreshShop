@model PaginationInfoViewModel
@{
    var preRouteData = Context.Request.Query.ToDictionary(x => x.Key, x => x.Value.ToString());
    if (preRouteData.ContainsKey("pageId"))
        preRouteData.Remove("pageId");
    preRouteData.Add("pageId", (Model.ActualPage - 1).ToString());

    var nextRouteData = Context.Request.Query.ToDictionary(x => x.Key, x => x.Value.ToString());
    if (nextRouteData.ContainsKey("pageId"))
        nextRouteData.Remove("pageId");
    nextRouteData.Add("pageId", (Model.ActualPage + 1).ToString());
}

<div class="container">
    <article class="esh-pager-wrapper row">
        <nav>
            <div class="owl-nav">
                <div class="col-md-2 col-xs-12">
                    <a class="esh-pager-item-left esh-pager-item--navigable esh-pager-item @Model.Previous"
                       id="Previous"
                       asp-all-route-data="preRouteData"
                       aria-label="Next">
                        <button type="button" role="presentation" class="owl-next">PREV</button>
                    </a>
                </div>

                <div>
                    <span class="esh-pager-item">
                        @Model.ItemsPerPage of @Model.TotalItems products - Page @(Model.ActualPage + 1) - @Model.TotalPages
                    </span>
                </div>

                <div class="col-md-2 col-xs-12">
                    <a class="esh-pager-item-right esh-pager-item--navigable esh-pager-item @Model.Next"
                       id="Next"
                       asp-all-route-data="nextRouteData"
                       aria-label="Next">
                        <button type="button" role="presentation" class="owl-next">NEXT</button>
                    </a>
                </div>
            </div>
        </nav>
    </article>
</div>
